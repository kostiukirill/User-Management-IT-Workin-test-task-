{"ast":null,"code":"import{configureStore,combineReducers}from'@reduxjs/toolkit';import{userRedusers,usersReducers}from'./reducer';export var store=configureStore({reducer:combineReducers({user:userRedusers,users:usersReducers})});console.log(store.getState());","map":{"version":3,"names":["configureStore","combineReducers","userRedusers","usersReducers","store","reducer","user","users","console","log","getState"],"sources":["/Users/kirill/Documents/Документы — MacBook Pro - Customer/IT/internature/User-Management-IT-Workin-test-task-/src/app/store.ts"],"sourcesContent":["import { configureStore, ThunkAction, Action, combineReducers} from '@reduxjs/toolkit';\nimport { userRedusers, usersReducers } from './reducer';\n\n\nexport const store = configureStore({\n  reducer: combineReducers({\n    user : userRedusers, \n    users: usersReducers\n  }),\n})\n\nconsole.log(store.getState())\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n"],"mappings":"AAAA,OAASA,cAAc,CAAuBC,eAAe,KAAO,kBAAkB,CACtF,OAASC,YAAY,CAAEC,aAAa,KAAQ,WAAW,CAGvD,MAAO,IAAM,CAAAC,KAAK,CAAGJ,cAAc,CAAC,CAClCK,OAAO,CAAEJ,eAAe,CAAC,CACvBK,IAAI,CAAGJ,YAAY,CACnBK,KAAK,CAAEJ,aACT,CAAC,CACH,CAAC,CAAC,CAEFK,OAAO,CAACC,GAAG,CAACL,KAAK,CAACM,QAAQ,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}