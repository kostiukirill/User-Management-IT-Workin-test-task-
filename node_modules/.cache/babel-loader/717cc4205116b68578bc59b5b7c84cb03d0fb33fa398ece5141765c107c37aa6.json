{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { api } from './services/api';\nimport auth from '../features/authSlice';\nimport { listenerMiddleware } from '../middleware/auth';\nexport const store = configureStore({\n  reducer: {\n    [api.reducerPath]: api.reducer,\n    auth\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(api.middleware).prepend(listenerMiddleware.middleware)\n});","map":{"version":3,"names":["configureStore","api","auth","listenerMiddleware","store","reducer","reducerPath","middleware","getDefaultMiddleware","concat","prepend"],"sources":["/Users/kirill/Documents/Документы — MacBook Pro - Customer/IT/Projects for gitHub/pet-projects/resume/client/src/app/store.ts"],"sourcesContent":["import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport { api } from './services/api';\nimport auth from '../features/authSlice'\nimport { listenerMiddleware } from '../middleware/auth';\n\n\nexport const store = configureStore({\n  reducer: {\n    [api.reducerPath]: api.reducer,\n    auth\n  },\n  middleware:(getDefaultMiddleware) => getDefaultMiddleware().concat(api.middleware).prepend(listenerMiddleware.middleware), \n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n"],"mappings":"AAAA,SAASA,cAAc,QAA6B,kBAAkB;AACtE,SAASC,GAAG,QAAQ,gBAAgB;AACpC,OAAOC,IAAI,MAAM,uBAAuB;AACxC,SAASC,kBAAkB,QAAQ,oBAAoB;AAGvD,OAAO,MAAMC,KAAK,GAAGJ,cAAc,CAAC;EAClCK,OAAO,EAAE;IACP,CAACJ,GAAG,CAACK,WAAW,GAAGL,GAAG,CAACI,OAAO;IAC9BH;EACF,CAAC;EACDK,UAAU,EAAEC,oBAAoB,IAAKA,oBAAoB,CAAC,CAAC,CAACC,MAAM,CAACR,GAAG,CAACM,UAAU,CAAC,CAACG,OAAO,CAACP,kBAAkB,CAACI,UAAU;AAC1H,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}