{"ast":null,"code":"export const validateHandler = (e, setVar, setVarError) => {\n  const regexpNameOrSurname = /^[a-zA-Zа-яА-я]+$/;\n  const regexpEmail = /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/;\n  switch (e.target.name) {\n    case 'name':\n      setVar(e.target.value);\n      if (!regexpNameOrSurname.test(String(e.currentTarget.value).toLowerCase())) {\n        setVarError(\"Name isn't valid\");\n      } else {\n        setVarError(\"\");\n      }\n      break;\n    case 'surname':\n      setVar(e.target.value);\n      if (!regexpNameOrSurname.test(String(e.currentTarget.value).toLowerCase())) {\n        setVarError(\"Surname isn't valid\");\n      } else {\n        setVarError(\"\");\n      }\n      break;\n    case 'email':\n      setVar(e.target.value);\n      if (!regexpEmail.test(String(e.currentTarget.value).toLowerCase())) {\n        setVarError(\"Email isn't valid\");\n      } else {\n        setVarError(\"\");\n      }\n      break;\n  }\n};","map":{"version":3,"names":["validateHandler","e","setVar","setVarError","regexpNameOrSurname","regexpEmail","target","name","value","test","String","currentTarget","toLowerCase"],"sources":["/Users/kirill/Documents/Документы — MacBook Pro - Customer/IT/internature/User-Management-IT-Workin-test-task-/src/components/utils/validateHandler.ts"],"sourcesContent":["export const validateHandler =(e: React.ChangeEvent<HTMLInputElement>, \n                                setVar: React.Dispatch<React.SetStateAction<string>>, \n                                setVarError: React.Dispatch<React.SetStateAction<string>>) => {\n\n    const regexpNameOrSurname = /^[a-zA-Zа-яА-я]+$/;\n    const regexpEmail = /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/ ;\n    switch (e.target.name) {\n        case 'name':\n            setVar(e.target.value)\n            if(!regexpNameOrSurname.test(String(e.currentTarget.value).toLowerCase())) {\n                setVarError(\"Name isn't valid\")\n            } else {\n                setVarError(\"\")\n            }\n            break;\n        case 'surname':\n            setVar(e.target.value)\n            if(!regexpNameOrSurname.test(String(e.currentTarget.value).toLowerCase())) {\n                setVarError(\"Surname isn't valid\")\n            } else {\n                setVarError(\"\")\n            }\n            break;\n        case 'email':\n            setVar(e.target.value)\n            if(!regexpEmail.test(String(e.currentTarget.value).toLowerCase())) {\n                setVarError(\"Email isn't valid\")\n            } else {\n                setVarError(\"\")\n            }\n            break;\n    }\n}"],"mappings":"AAAA,OAAO,MAAMA,eAAe,GAAEA,CAACC,CAAsC,EACrCC,MAAoD,EACpDC,WAAyD,KAAK;EAE1F,MAAMC,mBAAmB,GAAG,mBAAmB;EAC/C,MAAMC,WAAW,GAAG,yIAAyI;EAC7J,QAAQJ,CAAC,CAACK,MAAM,CAACC,IAAI;IACjB,KAAK,MAAM;MACPL,MAAM,CAACD,CAAC,CAACK,MAAM,CAACE,KAAK,CAAC;MACtB,IAAG,CAACJ,mBAAmB,CAACK,IAAI,CAACC,MAAM,CAACT,CAAC,CAACU,aAAa,CAACH,KAAK,CAAC,CAACI,WAAW,CAAC,CAAC,CAAC,EAAE;QACvET,WAAW,CAAC,kBAAkB,CAAC;MACnC,CAAC,MAAM;QACHA,WAAW,CAAC,EAAE,CAAC;MACnB;MACA;IACJ,KAAK,SAAS;MACVD,MAAM,CAACD,CAAC,CAACK,MAAM,CAACE,KAAK,CAAC;MACtB,IAAG,CAACJ,mBAAmB,CAACK,IAAI,CAACC,MAAM,CAACT,CAAC,CAACU,aAAa,CAACH,KAAK,CAAC,CAACI,WAAW,CAAC,CAAC,CAAC,EAAE;QACvET,WAAW,CAAC,qBAAqB,CAAC;MACtC,CAAC,MAAM;QACHA,WAAW,CAAC,EAAE,CAAC;MACnB;MACA;IACJ,KAAK,OAAO;MACRD,MAAM,CAACD,CAAC,CAACK,MAAM,CAACE,KAAK,CAAC;MACtB,IAAG,CAACH,WAAW,CAACI,IAAI,CAACC,MAAM,CAACT,CAAC,CAACU,aAAa,CAACH,KAAK,CAAC,CAACI,WAAW,CAAC,CAAC,CAAC,EAAE;QAC/DT,WAAW,CAAC,mBAAmB,CAAC;MACpC,CAAC,MAAM;QACHA,WAAW,CAAC,EAAE,CAAC;MACnB;MACA;EACR;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}