{"ast":null,"code":"import { createListenerMiddleware } from \"@reduxjs/toolkit\";\nimport { authApi } from \"../app/services/auth\";\nexport const listenerMiddleware = createListenerMiddleware();\nlistenerMiddleware.startListening({\n  matcher: authApi.endpoints.login.matchFulfilled,\n  effect: async (action, listenerApi) => {\n    listenerApi.cancelActiveListeners();\n    if (action.payload.token) {\n      localStorage.setItem('token', action.payload.token);\n    }\n  }\n});","map":{"version":3,"names":["createListenerMiddleware","authApi","listenerMiddleware","startListening","matcher","endpoints","login","matchFulfilled","effect","action","listenerApi","cancelActiveListeners","payload","token","localStorage","setItem"],"sources":["/Users/kirill/Documents/Документы — MacBook Pro - Customer/IT/internature/ test task for IT Workin/client/src/middleware/auth.ts"],"sourcesContent":["import { createListenerMiddleware } from \"@reduxjs/toolkit\";\nimport { authApi } from \"../app/services/auth\";\n\nexport const listenerMiddleware = createListenerMiddleware();\n\nlistenerMiddleware.startListening({\n    matcher:authApi.endpoints.login.matchFulfilled,\n    effect:async (action, listenerApi) => {\n        listenerApi.cancelActiveListeners();\n        if(action.payload.token) {\n            localStorage.setItem('token', action.payload.token)\n        }\n    }\n})"],"mappings":"AAAA,SAASA,wBAAwB,QAAQ,kBAAkB;AAC3D,SAASC,OAAO,QAAQ,sBAAsB;AAE9C,OAAO,MAAMC,kBAAkB,GAAGF,wBAAwB,CAAC,CAAC;AAE5DE,kBAAkB,CAACC,cAAc,CAAC;EAC9BC,OAAO,EAACH,OAAO,CAACI,SAAS,CAACC,KAAK,CAACC,cAAc;EAC9CC,MAAM,EAAC,MAAAA,CAAOC,MAAM,EAAEC,WAAW,KAAK;IAClCA,WAAW,CAACC,qBAAqB,CAAC,CAAC;IACnC,IAAGF,MAAM,CAACG,OAAO,CAACC,KAAK,EAAE;MACrBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEN,MAAM,CAACG,OAAO,CAACC,KAAK,CAAC;IACvD;EACJ;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}