{"ast":null,"code":"var _jsxFileName = \"/Users/kirill/Documents/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B \\u2014 MacBook Pro - Customer/IT/Projects for gitHub/pet-projects/resume/client/src/components/home/main/skills/tabsnav/index.tsx\";\nimport React from 'react';\nimport styles from './index.module.css';\nimport TabButton from './tabButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TabsNav = props => {\n  let TabsNavItemsHard = [];\n  let TabsNavItemsSoft = [];\n  const focusesAndTypesOfSkillsArr = props.focusesAndTypesOfSkillsArr;\n  const handleChange = event => {\n    props.onChange(event.target.value);\n    // TabsNavItemsHard.forEach((el) => {\n\n    // })\n    event.target.className += ` ${styles.button_tab__active}`;\n  };\n  const pushElemsToArrays = (arrDb, arrDest, i, indOfValue) => {\n    arrDest.push( /*#__PURE__*/_jsxDEV(TabButton, {\n      onClick: handleChange,\n      className: `${styles.button_tag}`,\n      value: `${Object.values(arrDb[i])[1]}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n    // <button onClick={handleChange} className={`${styles.button_tag}`} value={`${Object.values(arrDb[i])[1]}`}>\n    // {Object.values(arrDb[i])[indOfValue]}\n    // </button>\n    );\n  };\n\n  for (let i = 0; i < focusesAndTypesOfSkillsArr.length; i++) {\n    if (Object.values(focusesAndTypesOfSkillsArr[i])[0] === 'Hard') {\n      pushElemsToArrays(focusesAndTypesOfSkillsArr, TabsNavItemsHard, i, 1);\n    } else {\n      pushElemsToArrays(focusesAndTypesOfSkillsArr, TabsNavItemsSoft, i, 1);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.main_menu,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.mySkills_title,\n      children: \"My skills\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tab_list,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: styles.skill_type,\n        children: \"HARD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), TabsNavItemsHard]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tab_list,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: styles.skill_type,\n        children: \"SOFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), TabsNavItemsSoft]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_c = TabsNav;\nexport default TabsNav;\nvar _c;\n$RefreshReg$(_c, \"TabsNav\");","map":{"version":3,"names":["React","styles","TabButton","jsxDEV","_jsxDEV","TabsNav","props","TabsNavItemsHard","TabsNavItemsSoft","focusesAndTypesOfSkillsArr","handleChange","event","onChange","target","value","className","button_tab__active","pushElemsToArrays","arrDb","arrDest","i","indOfValue","push","onClick","button_tag","Object","values","fileName","_jsxFileName","lineNumber","columnNumber","length","main_menu","children","mySkills_title","tab_list","skill_type","_c","$RefreshReg$"],"sources":["/Users/kirill/Documents/Документы — MacBook Pro - Customer/IT/Projects for gitHub/pet-projects/resume/client/src/components/home/main/skills/tabsnav/index.tsx"],"sourcesContent":["import React, { ReactElement } from 'react'\nimport styles from './index.module.css'\nimport TabButton from './tabButton';\n\n\n\n\ninterface TabsNavProps {\n    onChange: Function;\n    focusesAndTypesOfSkillsArr: Object[];\n}\n\ntype Writeable<T> = { \n    -readonly [N in keyof T]: T[N] extends string ? Writeable<T[N]> : T[N];\n};\n\ntype MyWritable = Writeable<ReactElement>;\n\n\nconst TabsNav = (props: TabsNavProps) => {\n    let TabsNavItemsHard: Array<MyWritable>= [];\n    let TabsNavItemsSoft: Array<MyWritable> = [];\n\n    const focusesAndTypesOfSkillsArr = props.focusesAndTypesOfSkillsArr\n\n    \n    const handleChange = (event: any) => {\n        props.onChange(event.target.value);\n        // TabsNavItemsHard.forEach((el) => {\n\n        // })\n        event.target.className += ` ${styles.button_tab__active}`\n    }\n\n    const pushElemsToArrays = (arrDb: Object[], arrDest: Array<MyWritable>, i: number, indOfValue: number) =>  {\n        arrDest.push(\n            <TabButton onClick={handleChange} className={`${styles.button_tag}`} value={`${Object.values(arrDb[i])[1]}`}/>\n            // <button onClick={handleChange} className={`${styles.button_tag}`} value={`${Object.values(arrDb[i])[1]}`}>\n            // {Object.values(arrDb[i])[indOfValue]}\n            // </button>\n        )\n    }\n\n    for(let i = 0; i < focusesAndTypesOfSkillsArr.length; i++) {\n        if(Object.values(focusesAndTypesOfSkillsArr[i])[0] === 'Hard') {\n            pushElemsToArrays(focusesAndTypesOfSkillsArr, TabsNavItemsHard, i, 1)\n        } else {\n            pushElemsToArrays(focusesAndTypesOfSkillsArr, TabsNavItemsSoft, i, 1)\n        }\n    }\n\n  return (\n    <div className={styles.main_menu}>\n        <h2 className={styles.mySkills_title}>My skills</h2>\n        <div className={styles.tab_list}>\n            <h4 className={styles.skill_type}>\n                HARD\n            </h4>\n                {TabsNavItemsHard}\n        </div>\n        <div className={styles.tab_list}>\n            <h4 className={styles.skill_type}>\n                SOFT\n            </h4>\n                {TabsNavItemsSoft}\n        </div>\n    </div>\n  )\n}\n\nexport default TabsNav"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}