{"ast":null,"code":"import { combineReducers } from '@reduxjs/toolkit';\nimport { createStore } from 'redux';\nimport { userRedusers, usersReducers } from './reducer';\nexport const store = createStore(combineReducers({\n  userRedusers,\n  usersReducers\n}));\nconsole.log(store.getState().userRedusers);\n\n// export type AppDispatch = typeof store.dispatch;\n// export type RootState = ReturnType<typeof store.getState>;\n// export type AppThunk<ReturnType = void> = ThunkAction<\n//   ReturnType,\n//   RootState,\n//   unknown,\n//   Action<string>\n// >;","map":{"version":3,"names":["combineReducers","createStore","userRedusers","usersReducers","store","console","log","getState"],"sources":["/Users/kirill/Documents/Документы — MacBook Pro - Customer/IT/internature/User-Management-IT-Workin-test-task-/src/app/store.ts"],"sourcesContent":["import {combineReducers} from '@reduxjs/toolkit';\nimport {createStore} from 'redux'\nimport { userRedusers, usersReducers } from './reducer';\n\n\n\nexport const store = createStore(\n  combineReducers({userRedusers, usersReducers}),\n\n)\n\nconsole.log(store.getState().userRedusers)\n\n// export type AppDispatch = typeof store.dispatch;\n// export type RootState = ReturnType<typeof store.getState>;\n// export type AppThunk<ReturnType = void> = ThunkAction<\n//   ReturnType,\n//   RootState,\n//   unknown,\n//   Action<string>\n// >;\n"],"mappings":"AAAA,SAAQA,eAAe,QAAO,kBAAkB;AAChD,SAAQC,WAAW,QAAO,OAAO;AACjC,SAASC,YAAY,EAAEC,aAAa,QAAQ,WAAW;AAIvD,OAAO,MAAMC,KAAK,GAAGH,WAAW,CAC9BD,eAAe,CAAC;EAACE,YAAY;EAAEC;AAAa,CAAC,CAE/C,CAAC;AAEDE,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,QAAQ,CAAC,CAAC,CAACL,YAAY,CAAC;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}