{"ast":null,"code":"import { combineReducers } from '@reduxjs/toolkit';\nimport { createStore } from 'redux';\nimport { userRedusers, usersReducers } from './reducer';\nconst rootReducers = combineReducers({\n  userRedusers,\n  usersReducers\n});\nexport const store = createStore(rootReducers, localStorage['users-store'] ? JSON.parse(localStorage['users-store']) : {});\nstore.subscribe(() => {\n  localStorage['users-store'] = JSON.stringify(store.getState());\n});","map":{"version":3,"names":["combineReducers","createStore","userRedusers","usersReducers","rootReducers","store","localStorage","JSON","parse","subscribe","stringify","getState"],"sources":["/Users/kirill/Documents/Документы — MacBook Pro - Customer/IT/internature/User-Management-IT-Workin-test-task-/src/app/store.ts"],"sourcesContent":["import {combineReducers} from '@reduxjs/toolkit';\nimport {createStore} from 'redux'\nimport { userRedusers, usersReducers } from './reducer';\n\n\nconst rootReducers = combineReducers({userRedusers, usersReducers})\n\nexport const store = createStore(\n  rootReducers,\n  (localStorage['users-store'])?\n  JSON.parse(localStorage['users-store']):\n  {}\n)\n\nstore.subscribe(() => {\n  localStorage['users-store'] = JSON.stringify(store.getState())\n});\n\n"],"mappings":"AAAA,SAAQA,eAAe,QAAO,kBAAkB;AAChD,SAAQC,WAAW,QAAO,OAAO;AACjC,SAASC,YAAY,EAAEC,aAAa,QAAQ,WAAW;AAGvD,MAAMC,YAAY,GAAGJ,eAAe,CAAC;EAACE,YAAY;EAAEC;AAAa,CAAC,CAAC;AAEnE,OAAO,MAAME,KAAK,GAAGJ,WAAW,CAC9BG,YAAY,EACXE,YAAY,CAAC,aAAa,CAAC,GAC5BC,IAAI,CAACC,KAAK,CAACF,YAAY,CAAC,aAAa,CAAC,CAAC,GACvC,CAAC,CACH,CAAC;AAEDD,KAAK,CAACI,SAAS,CAAC,MAAM;EACpBH,YAAY,CAAC,aAAa,CAAC,GAAGC,IAAI,CAACG,SAAS,CAACL,KAAK,CAACM,QAAQ,CAAC,CAAC,CAAC;AAChE,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}