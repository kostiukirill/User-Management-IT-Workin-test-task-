{"ast":null,"code":"import { combineReducers } from '@reduxjs/toolkit';\nimport { createStore } from 'redux';\nimport { userRedusers, usersReducers } from './reducer';\n\n// export const store = configureStore({\n//   reducer: combineReducers({\n//     user : userRedusers, \n//     users: usersReducers\n//   }),\n// })\n\nexport const store = createStore(combineReducers({\n  userRedusers,\n  usersReducers\n}));\nconsole.log(store.getState());","map":{"version":3,"names":["combineReducers","createStore","userRedusers","usersReducers","store","console","log","getState"],"sources":["/Users/kirill/Documents/Документы — MacBook Pro - Customer/IT/internature/User-Management-IT-Workin-test-task-/src/app/store.ts"],"sourcesContent":["import {ThunkAction, Action, combineReducers} from '@reduxjs/toolkit';\nimport {createStore} from 'redux'\nimport { userRedusers, usersReducers } from './reducer';\n\n\n// export const store = configureStore({\n//   reducer: combineReducers({\n//     user : userRedusers, \n//     users: usersReducers\n//   }),\n// })\n\nexport const store = createStore(\n  combineReducers({userRedusers, usersReducers})\n)\n\nconsole.log(store.getState())\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n"],"mappings":"AAAA,SAA6BA,eAAe,QAAO,kBAAkB;AACrE,SAAQC,WAAW,QAAO,OAAO;AACjC,SAASC,YAAY,EAAEC,aAAa,QAAQ,WAAW;;AAGvD;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,KAAK,GAAGH,WAAW,CAC9BD,eAAe,CAAC;EAACE,YAAY;EAAEC;AAAa,CAAC,CAC/C,CAAC;AAEDE,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,QAAQ,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}